# vim: set tabstop=2 shiftwidth=2 ft=yaml smartindent expandtab :
---
{% if 'apps.openshift.io' in lookup('k8s', cluster_info='api_groups') %}
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
{% else %}
apiVersion: apps/v1
kind: Deployment
{% endif %}
metadata:
  creationTimestamp: null
  name: {{ app_name }}
  namespace: {{ namespace | string }}
  labels:
    app: {{ app_name }}
    service: {{ app_name }}
    service_class_id: '{{ _apb_service_class_id }}'
    plan_id: '{{ _apb_plan_id }}'
    service_instance_id: '{{ _apb_service_instance_id }}'
spec:
  replicas: 1
{% if 'apps.openshift.io' in lookup('k8s', cluster_info='api_groups') %}
  selector:
    app: {{ app_name }}
    service: {{ app_name }}
  strategy:
    type: Rolling
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
  test: false
  triggers:
    - type: ConfigChange
{% else %}
  selector:
    matchLabels:
      app: {{ app_name }}
      service: {{ app_name }}
  strategy:
    type: Recreate
{% endif %}
  template:
    metadata:
      name: {{ app_name }}
      labels:
        app: {{ app_name }}
        service: {{ app_name }}
        service_class_id: '{{ _apb_service_class_id }}'
        plan_id: '{{ _apb_plan_id }}'
        service_instance_id: '{{ _apb_service_instance_id }}'
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSecond: 30
      containers:
        - name: unifi-ctrl
          image: {{ app_image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8443
              name: web
              protocol: TCP
            - containerPort: 6789
              name: speed-test
              protocol: TCP
            - containerPort: 8080
              name: devcon-comm
              protocol: TCP
            - containerPort: 8880
              name: http-redirect
              protocol: TCP
            - containerPort: 8843
              name: https-redirect
              protocol: TCP
            - containerPort: 3478
              name: stun
              protocol: UDP
            - containerPort: 10001
              name: discovery
              protocol: UDP
          volumeMounts:
            - mountPath: /unifi/
              name: config
            - mountPath: /var/run/unifi/
              name: var-run
          envFrom:
            - configMapRef:
                name: {{ app_name }}-env
      volumes:
        - name: var-run
          emptyDir: {}
        - name: config
{% if _apb_plan_id == 'Persistent' %}
          persistentVolumeClaim:
            claimName: {{ app_name }}
{% else %}
          emptyDir: {}
{% endif %}
